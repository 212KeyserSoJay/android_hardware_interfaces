/*
 * Copyright 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.hardware.wifi@1.0;

/**
 * NAN Response and Event Callbacks.
 */
interface IWifiNanIfaceEventCallback {
  /**
   * Callback invoked to notify the status of the Publish Request.
   *
   * @param cmdId command Id corresponding to the original request.
   * @param rspData Message Data.
   */
  oneway notifyPublishResponse(CommandId id, NanPublishResponseMsg rspData);

  /**
   * Callback invoked to notify the status of the Subscribe Request.
   *
   * @param cmdId command Id corresponding to the original request.
   * @param rspData Message Data.
   */
  oneway notifySubscribeResponse(CommandId id, NanSubscribeResponseMsg rspData);

  /**
   * Callback invoked to notify the status of the Data Path Request.
   *
   * @param cmdId command Id corresponding to the original request.
   * @param rspData Message Data.
   */
  oneway notifyDataPathResponse(CommandId id, NanDataPathResponseMsg rspData);

  /**
   * Callback invoked to notify the status of the Capability Request.
   *
   * @param cmdId command Id corresponding to the original request.
   * @param rspData Message Data.
   */
  oneway notifyCapabilitiesResponse(CommandId id, NanCapabilitiesResponseMsg rspData);

  /**
   * Callbacks for the various asynchornous NAN Events.
   */
  oneway eventPublishTerminated(NanPublishTerminatedInd event);

  oneway eventMatch(NanMatchInd event);

  oneway eventMatchExpired(NanMatchExpiredInd event);

  oneway eventSubscribeTerminated(NanSubscribeTerminatedInd event);

  oneway eventFollowup(NanFollowupInd event);

  oneway eventDiscEngEvent(NanDiscEngEventInd event);

  oneway eventDisabled(NanDisabledInd event);

  oneway eventBeaconSdfPayload(NanBeaconSdfPayloadInd event);

  oneway eventDataRequest(NanDataPathRequestInd event);

  oneway eventDataConfirm(NanDataPathConfirmInd event);

  oneway eventDataEnd(NanDataPathEndInd event);

  oneway eventTransmitFollowup(NanTransmitFollowupInd event);
};
